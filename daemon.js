// Generated by CoffeeScript 1.6.3
(function() {
  var EventEmitter2, argv, confSvr, exporterPrefix, exporters, fs, logLevel, mainLoop, messenger, os, requireAll, runSpider, spiders, transcoders;

  argv = require('optimist').options('d', {
    alias: 'debug'
  }).argv;

  fs = require('fs');

  if (!fs.existsSync('config.json')) {
    fs.writeFileSync('config.json', '{}');
  }

  logLevel = 'info';

  if (argv.debug) {
    logLevel = 'debug';
  }

  global.log = require('tracer').console({
    format: '{{timestamp}} [{{title}}]{{message}}',
    level: logLevel,
    dateformat: 'yyyy-mm-dd HH:MM:s.l'
  });

  if (argv.debug) {
    log.info('Debug Mode!');
  }

  global._ = require('lodash');

  global.wait = require('wait.for');

  global.config = JSON.parse(fs.readFileSync('config.json', {
    encoding: 'utf-8'
  }));

  spiders = {};

  exporters = {};

  transcoders = {};

  EventEmitter2 = require('eventemitter2').EventEmitter2;

  global.Server = new EventEmitter2({
    newListener: false,
    maxListeners: 20
  });

  Server.registerSpider = function(metadata) {
    return spiders[metadata.name] = metadata;
  };

  Server.removeSpider = function(name) {
    return delete spiders[name];
  };

  Server.removeExporter = function(name) {
    return delete exporters[name];
  };

  Server.registerExporter = function(metadata) {
    return exporters[metadata.name] = metadata;
  };

  Server.registerTranscoder = function(metadata) {
    return transcoders[metadata.name] = metadata;
  };

  Server.on('Spider.newItem', _.partial(Server.emit, 'Analyzer.run'));

  Server.on('Spider.error', function(error, name) {
    log.error('Spider %s ran into error.%s', name, error);
    spiders[name].running = false;
    return spiders[name].lastError = error;
  });

  Server.on('Spider.success', function(name) {
    log.info('Spider %s done its job.', name);
    spiders[name].running = false;
    return spiders[name].lastError = null;
  });

  requireAll = require('require-all');

  os = require('os');

  exporterPrefix = {
    'Windows': 'W',
    'Linux': 'L'
  }[os.type()];

  require('./lib/analyzer');

  requireAll({
    dirname: __dirname + '/lib/exporters',
    filter: new RegExp(exporterPrefix + '(.+)\.js$'),
    excludeDirs: /^\.(git|svn)$/
  });

  requireAll({
    dirname: __dirname + '/lib/spiders',
    filter: /(.+).js$/,
    excludeDirs: /^\.(git|svn)$/
  });

  requireAll({
    dirname: __dirname + '/lib/transcoders',
    filter: /(.+).js$/,
    excludeDirs: /^\.(git|svn)$/
  });

  log.info('All modules loaded. %d exporters found, %d spiders found, %d transcoders found.', _.size(exporters), _.size(spiders), _.size(transcoders));

  log.debug('Starting main loop.');

  Server.removeSpider('GooglePlus');

  runSpider = function(name) {
    log.debug('Running spider %s', name);
    spiders[name].running = true;
    spiders[name].beforeNext = spiders[name].interval;
    return Server.emit('Spider.run' + name);
  };

  mainLoop = function() {
    var name, spider, _results;
    _results = [];
    for (name in spiders) {
      spider = spiders[name];
      if (spider.running) {
        break;
      }
      if (spider.beforeNext == null) {
        runSpider(name);
      }
      spiders[name].beforeNext -= 1;
      if (spiders[name].beforeNext <= 0) {
        _results.push(runSpider(name));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  setInterval(mainLoop, 1000);

  messenger = require('messenger');

  confSvr = messenger.createListener(2333);

  log.info('Config server listening on port 2333.');

}).call(this);

/*
//@ sourceMappingURL=daemon.map
*/
