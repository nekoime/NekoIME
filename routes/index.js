// Generated by CoffeeScript 1.7.1
(function() {
  var express, nekoime, router;

  nekoime = require('../lib/nekoime');

  express = require("express");

  router = express.Router();

  router.get("/", nekoime.login_check, function(req, res) {
    return nekoime.db.words.find({}).sort({
      frequencies: -1
    }).limit(120).exec(function(err, docs) {
      var word, words, _i, _len;
      if (err) {
        return res.send(err.toString());
      }
      words = docs;
      for (_i = 0, _len = words.length; _i < _len; _i++) {
        word = words[_i];
        word.updated_at = "" + (word.updated_at.getFullYear()) + "-" + (word.updated_at.getMonth() + 1) + "-" + (word.updated_at.getDate()) + " " + (word.updated_at.getHours()) + ":" + (word.updated_at.getMinutes()) + ":" + (word.updated_at.getSeconds());
      }
      return nekoime.db.words.count({}, function(err, count) {
        return nekoime.db.user.findOne({}, function(err, user) {
          var user_updated_at;
          if (err) {
            return res.send(err.toString());
          }
          user_updated_at = new Date();
          return res.render("index", {
            words: words,
            words_count: count,
            user_name: user.profile.displayName,
            user_image: user.profile.image.url + '&sz=200',
            user_updated_at: "" + (user_updated_at.getFullYear()) + "-" + (user_updated_at.getMonth() + 1) + "-" + (user_updated_at.getDate()) + " " + (user_updated_at.getHours()) + ":" + (user_updated_at.getMinutes()) + ":" + (user_updated_at.getSeconds()),
            sources_count: nekoime.sources.length,
            backend: nekoime.backend.id
          });
        });
      });
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=index.map
