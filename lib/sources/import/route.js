// Generated by CoffeeScript 1.7.1
(function() {
  var child_process, express, formidable, nekoime, pinyin, router;

  child_process = require('child_process');

  formidable = require('formidable');

  pinyin = require("pinyin");

  nekoime = require('../../nekoime');

  express = require("express");

  router = express.Router();

  router.post("/", function(req, res) {
    return formidable.IncomingForm().parse(req, function(err, fields, files) {
      var file, key;
      return child_process.execFile('./bin/nekoime-analyser', (function() {
        var _results;
        _results = [];
        for (key in files) {
          file = files[key];
          _results.push(file.path);
        }
        return _results;
      })(), function(error, stdout, stderr) {
        if (error) {
          return res.send(500, error.toString());
        }
        return nekoime.db.words.find({}, function(err, docs) {
          var char, flag, frequencies, line, lines, new_words, old_words, p, word, words_count, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
          if (error) {
            return res.send(500, error.toString());
          }
          old_words = {};
          for (_i = 0, _len = docs.length; _i < _len; _i++) {
            word = docs[_i];
            old_words[word.word] = true;
          }
          new_words = [];
          lines = stdout.split("\n");
          lines.pop();
          words_count = lines.length;
          _ref = lines.sort();
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            line = _ref[_j];
            _ref1 = line.split(' '), word = _ref1[0], frequencies = _ref1[1];
            if (word.length >= 3) {
              flag = false;
              for (_k = 0, _len2 = word.length; _k < _len2; _k++) {
                char = word[_k];
                if (char !== word[0]) {
                  flag = true;
                  break;
                }
              }
              if (!flag) {
                continue;
              }
            }
            if (!old_words[word]) {
              new_words.push({
                word: word,
                frequencies: parseInt(frequencies),
                pinyin: (function() {
                  var _l, _len3, _ref2, _results;
                  _ref2 = pinyin(word, {
                    style: pinyin.STYLE_TONE2
                  });
                  _results = [];
                  for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {
                    p = _ref2[_l];
                    _results.push(p[0]);
                  }
                  return _results;
                })(),
                updated_at: new Date(),
                source: "import"
              });
            }
          }
          return nekoime.db.words.insert(new_words, function(err, newDocs) {
            if (error) {
              return res.send(500, error.toString());
            }
            res.send("识别了 " + words_count + " 个词语, 导入了 " + new_words.length + " 个新词");
            return nekoime.save_words();
          });
        });
      });
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=route.map
